{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ValidatorField } from '@app/helpers/ValidatorField';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nfunction RegistrationComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" E-mail \\u00E9 obrigat\\u00F3rio. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Deve ser um E-mail v\\u00E1lido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Senha \\u00E9 obrigat\\u00F3rio. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Deve conter no m\\u00EDnimo 6 caracteres. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Confirmar Senha \\u00E9 obrigat\\u00F3rio. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Confirmar Senha deve ser igual a Senha. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegistrationComponent {\n  constructor(authService, router, fb, toastr) {\n    this.authService = authService;\n    this.router = router;\n    this.fb = fb;\n    this.toastr = toastr;\n  }\n  get f() {\n    return this.registerForm.controls;\n  }\n  ngOnInit() {\n    this.validation();\n  }\n  validation() {\n    const formOptions = {\n      validators: ValidatorField.MustMatch('password', 'confirmPassword')\n    };\n    this.registerForm = this.fb.group({\n      fullName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\n      userName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required]\n    }, formOptions);\n  }\n  cssValidator(campoForm) {\n    return {\n      'is-invalid': campoForm.errors && campoForm.touched\n    };\n  }\n  cadastrarUsuario() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign(this.registerForm.value);\n      //     console.log(this.user);\n      this.authService.register(this.user).subscribe(() => {\n        this.router.navigate(['/user/login']);\n        this.toastr.success('Cadastro Realizado');\n      }, error => {\n        const erro = error.error;\n        erro.forEach(element => {\n          switch (element.code) {\n            case 'DuplicateUserName':\n              this.toastr.error('Cadastro Duplicado!');\n              break;\n            case 'DuplicateEmail':\n              this.toastr.error('Email Duplicado!');\n              break;\n            default:\n              this.toastr.error(`Erro no Cadatro! CODE: ${element.code}`);\n              break;\n          }\n        });\n      });\n    }\n  }\n}\nRegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nRegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationComponent,\n  selectors: [[\"app-registration\"]],\n  decls: 58,\n  vars: 13,\n  consts: [[1, \"row\", \"mt-4\"], [1, \"col-md-6\", \"d-none\", \"d-md-block\", 2, \"height\", \"450px\"], [1, \"text-center\", \"col-md-12\", \"my-auto\", \"side-heder\"], [\"src\", \"../../../../assets/registerImage.png\", \"alt\", \"\", \"width\", \"400px\", 1, \"my-4\"], [1, \"col-md-6\"], [1, \"p-1\", 3, \"formGroup\"], [1, \"pb-2\", \"d-block\", \"d-md-none\"], [1, \"border-bottom\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"fullName\", \"placeholder\", \"Insira o nome completo\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [\"for\", \"\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Insira o E-mail Completo\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"userName\", \"placeholder\", \"Insira o nome de Usu\\u00E1rio\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-row\"], [1, \"form-group\", \"col-sm-6\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Digite uma Senha\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"Confirme a Senha\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-row\", \"p-1\", \"mb-3\"], [1, \"custom-control\", \"custom-checkbox\"], [\"type\", \"checkbox\", \"id\", \"customCheck1\", 1, \"custom-control-input\"], [1, \"custom-control-label\"], [\"href\", \"#\"], [1, \"form-group\", \"col-12\"], [1, \"btn\", \"btn-lg\", \"btn-success\", \"btn-block\", \"px-5\", 3, \"disabled\", \"click\"], [\"routerLink\", \"/user/login\", 1, \"btn\", \"btn-link\", \"btn-block\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\");\n      i0.ɵɵtext(4, \"Cadastro de Usu\\u00E1rio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"img\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"form\", 5)(8, \"div\", 6)(9, \"h3\", 7);\n      i0.ɵɵtext(10, \"Cadastro de Usu\\u00E1rio\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"label\");\n      i0.ɵɵtext(13, \"Nome Completo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵelementStart(15, \"div\", 10);\n      i0.ɵɵtext(16, \" Nome completo \\u00E9 obrigat\\u00F3rio. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 8)(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 12);\n      i0.ɵɵtemplate(21, RegistrationComponent_div_21_Template, 2, 0, \"div\", 13);\n      i0.ɵɵtemplate(22, RegistrationComponent_div_22_Template, 2, 0, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 8)(24, \"label\", 11);\n      i0.ɵɵtext(25, \"Usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 14);\n      i0.ɵɵelementStart(27, \"div\", 10);\n      i0.ɵɵtext(28, \" Usu\\u00E1rio \\u00E9 obrigat\\u00F3rio. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 15)(30, \"div\", 16)(31, \"label\", 11);\n      i0.ɵɵtext(32, \"Senha:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"input\", 17);\n      i0.ɵɵtemplate(34, RegistrationComponent_div_34_Template, 2, 0, \"div\", 13);\n      i0.ɵɵtemplate(35, RegistrationComponent_div_35_Template, 2, 0, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 16)(37, \"label\", 11);\n      i0.ɵɵtext(38, \"Confirmar Senha:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 18);\n      i0.ɵɵtemplate(40, RegistrationComponent_div_40_Template, 2, 0, \"div\", 13);\n      i0.ɵɵtemplate(41, RegistrationComponent_div_41_Template, 2, 0, \"div\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(42, \"div\", 19)(43, \"div\", 20);\n      i0.ɵɵelement(44, \"input\", 21);\n      i0.ɵɵelementStart(45, \"label\", 22);\n      i0.ɵɵtext(46, \"Eu concordo com os \");\n      i0.ɵɵelementStart(47, \"a\", 23);\n      i0.ɵɵtext(48, \"Termos de Uso\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(49, \".\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(50, \"div\", 15)(51, \"div\", 24)(52, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function RegistrationComponent_Template_button_click_52_listener() {\n        return ctx.cadastrarUsuario();\n      });\n      i0.ɵɵtext(53, \" Registrar \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(54, \"div\", 15)(55, \"div\", 24)(56, \"a\", 26);\n      i0.ɵɵtext(57, \" J\\u00E1 sou Cadastrado \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngClass\", ctx.cssValidator(ctx.f.fullName));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngClass\", ctx.cssValidator(ctx.f.email));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.f.email.errors == null ? null : ctx.f.email.errors.required) && ctx.f.email.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.f.email.errors == null ? null : ctx.f.email.errors.email) && (ctx.f.email.errors == null ? null : ctx.f.email.errors.pattern) && ctx.f.email.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", ctx.cssValidator(ctx.f.userName));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngClass\", ctx.cssValidator(ctx.f.password));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.f.password.errors == null ? null : ctx.f.password.errors.required) && ctx.f.password.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.f.password.errors == null ? null : ctx.f.password.errors.minlength) && ctx.f.password.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", ctx.cssValidator(ctx.f.confirmPassword));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.f.confirmPassword.errors == null ? null : ctx.f.confirmPassword.errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.f.confirmPassword.errors == null ? null : ctx.f.confirmPassword.errors.mustMatch);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgIf, i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","ValidatorField","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RegistrationComponent","constructor","authService","router","fb","toastr","f","registerForm","controls","ngOnInit","validation","formOptions","validators","MustMatch","group","fullName","required","email","pattern","userName","password","minLength","confirmPassword","cssValidator","campoForm","errors","touched","cadastrarUsuario","valid","user","Object","assign","value","register","subscribe","navigate","success","error","erro","forEach","element","code","ɵɵdirectiveInject","i1","AuthService","i2","Router","i3","UntypedFormBuilder","i4","ToastrService","selectors","decls","vars","consts","template","RegistrationComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","RegistrationComponent_div_21_Template","RegistrationComponent_div_22_Template","RegistrationComponent_div_34_Template","RegistrationComponent_div_35_Template","RegistrationComponent_div_40_Template","RegistrationComponent_div_41_Template","ɵɵlistener","RegistrationComponent_Template_button_click_52_listener","ɵɵadvance","ɵɵproperty","minlength","mustMatch"],"sourceRoot":"","sources":["C:\\Projetos\\ProEventos-Final\\Front\\ProEventos-App\\src\\app\\components\\user\\registration\\registration.component.ts","C:\\Projetos\\ProEventos-Final\\Front\\ProEventos-App\\src\\app\\components\\user\\registration\\registration.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormGroup } from '@angular/forms';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { UntypedFormBuilder } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { AbstractControlOptions } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ValidatorField } from '@app/helpers/ValidatorField';\r\nimport { User } from '@app/models/User';\r\nimport { AuthService } from '@app/services/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n registerForm: UntypedFormGroup;\r\n user: User;\r\n\r\n   constructor(private authService: AuthService\r\n    , public router: Router\r\n    , public fb: UntypedFormBuilder\r\n    , private toastr: ToastrService) {\r\n  }\r\n\r\n  get f(): any { return this.registerForm.controls; }\r\n\r\n  ngOnInit(): void {\r\n    this.validation();\r\n  }\r\n\r\n  private validation(): void {\r\n\r\n    const formOptions: AbstractControlOptions = {\r\n      validators: ValidatorField.MustMatch('password', 'confirmPassword')\r\n    };\r\n\r\n    this.registerForm = this.fb.group({\r\n      fullName: ['', Validators.required],\r\n      email: ['',[Validators.required, Validators.email, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\r\n      userName: ['', Validators.required],\r\n      password: ['',[Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, formOptions);\r\n  }\r\n\r\n      public cssValidator(campoForm: UntypedFormControl | AbstractControl): any {\r\n      return {'is-invalid': campoForm.errors && campoForm.touched};\r\n  } \r\n\r\n\r\n cadastrarUsuario() {\r\n    if (this.registerForm.valid) {\r\n        this.user = Object.assign(this.registerForm.value);\r\n               //     console.log(this.user);\r\n        this.authService.register(this.user).subscribe(\r\n        () => {\r\n          this.router.navigate(['/user/login']);\r\n          this.toastr.success('Cadastro Realizado');\r\n        }, error => {\r\n          const erro = error.error;\r\n          erro.forEach(element => {\r\n            switch (element.code) {\r\n              case 'DuplicateUserName':\r\n                this.toastr.error('Cadastro Duplicado!');\r\n                break;\r\n              case 'DuplicateEmail':\r\n                  this.toastr.error('Email Duplicado!');\r\n                  break;\r\n              default:\r\n                this.toastr.error(`Erro no Cadatro! CODE: ${element.code}`);\r\n                break;\r\n            }\r\n          });\r\n        }\r\n\r\n      );\r\n    }\r\n  }\r\n}","<div class=\"row mt-4\">\r\n\r\n\t<div class=\"col-md-6 d-none d-md-block\" style=\"height: 450px;\">\r\n\t\t<div class=\"text-center col-md-12 my-auto side-heder\">\r\n\t\t\t<h1>Cadastro de Usuário</h1>\r\n\t\t\t<img src=\"../../../../assets/registerImage.png\" class=\"my-4\" alt=\"\" width=\"400px\">\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"col-md-6\">\r\n\r\n    <form [formGroup]=\"registerForm\" class=\"p-1\">\r\n      <div class=\"pb-2 d-block d-md-none\">\r\n        <h3 class=\"border-bottom\">Cadastro de Usuário</h3>\r\n      </div>\r\n      <div class=\"form-group\">\r\n          <label>Nome Completo</label>\r\n          <input type=\"text\" class=\"form-control\" formControlName=\"fullName\"\r\n          [ngClass]=\"cssValidator(f.fullName)\" placeholder=\"Insira o nome completo\" />\r\n          <div class=\"invalid-feedback\">\r\n            Nome completo é obrigatório.\r\n          </div>\r\n        </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Email:</label>\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"email\"\r\n        [ngClass]=\"cssValidator(f.email)\" placeholder=\"Insira o E-mail Completo\" />\r\n        <div *ngIf=\"f.email.errors?.required && f.email.touched\" class=\"invalid-feedback\">\r\n          E-mail é obrigatório.\r\n        </div>\r\n        <div *ngIf=\"f.email.errors?.email && f.email.errors?.pattern &&  f.email.touched\" class=\"invalid-feedback\">\r\n          Deve ser um E-mail válido.\r\n        </div>\r\n\t\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Usuario:</label>\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"userName\"\r\n        [ngClass]=\"cssValidator(f.userName)\" placeholder=\"Insira o nome de Usuário\" />\r\n        <div class=\"invalid-feedback\">\r\n          Usuário é obrigatório.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group col-sm-6\">\r\n          <label for=\"\">Senha:</label>\r\n          <input class=\"form-control\" type=\"password\" formControlName=\"password\"\r\n          [ngClass]=\"cssValidator(f.password)\" placeholder=\"Digite uma Senha\" />\r\n          <div *ngIf=\"f.password.errors?.required && f.password.touched\"\r\n          class=\"invalid-feedback\">\r\n            Senha é obrigatório.\r\n          </div>\r\n          <div *ngIf=\"f.password.errors?.minlength && f.password.touched\"\r\n          class=\"invalid-feedback\">\r\n            Deve conter no mínimo 6 caracteres.\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group col-sm-6\">\r\n          <label for=\"\">Confirmar Senha:</label>\r\n          <input class=\"form-control\" type=\"password\" formControlName=\"confirmPassword\"\r\n          [ngClass]=\"cssValidator(f.confirmPassword)\" placeholder=\"Confirme a Senha\" />\r\n          <div *ngIf=\"f.confirmPassword.errors?.required\"\r\n            class=\"invalid-feedback\">\r\n            Confirmar Senha é obrigatório.\r\n          </div>\r\n          <div *ngIf=\"f.confirmPassword.errors?.mustMatch\"\r\n            class=\"invalid-feedback\">\r\n            Confirmar Senha deve ser igual a Senha.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row p-1 mb-3\">\r\n        <div class=\"custom-control custom-checkbox\">\r\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n          <label class=\"custom-control-label\">Eu concordo com os <a href=\"#\">Termos de Uso</a>.</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group col-12\">\r\n          <button class=\"btn btn-lg btn-success btn-block px-5\"  [disabled]=\"!registerForm.valid\" \r\n          (click)=\"cadastrarUsuario()\">\r\n            Registrar\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group col-12\">\r\n          <a class=\"btn btn-link btn-block\" routerLink=\"/user/login\">\r\n            Já sou Cadastrado\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\t</div>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}