{"ast":null,"code":"import { environment } from '@environments/environment';\nimport { take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoteService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = environment.apiURL + 'api/lotes';\n  }\n  getLotesByEventoId(eventoId) {\n    return this.http.get(`${this.baseURL}/${eventoId}`).pipe(take(1));\n  }\n  saveLote(eventoId, lotes) {\n    return this.http.put(`${this.baseURL}/${eventoId}`, lotes).pipe(take(1));\n  }\n  deleteLote(eventoId, loteId) {\n    return this.http.delete(`${this.baseURL}/${eventoId}/${loteId}`).pipe(take(1));\n  }\n}\nLoteService.ɵfac = function LoteService_Factory(t) {\n  return new (t || LoteService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoteService,\n  factory: LoteService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,2BAA2B;AAGvD,SAASC,IAAI,QAAQ,gBAAgB;;;AAKrC,OAAM,MAAOC,WAAW;EAGtBC,WAAA,CAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAGL,WAAW,CAACM,MAAM,GAAG,WAAW;EAEH;EAEhCC,kBAAkB,CAACC,QAAgB;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,GAAG,IAAI,CAACJ,OAAO,IAAIG,QAAQ,EAAE,CAAC,CAACE,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3E;EAEOU,QAAQ,CAACH,QAAgB,EAAEI,KAAa;IAC7C,OAAO,IAAI,CAACR,IAAI,CACbS,GAAG,CAAS,GAAG,IAAI,CAACR,OAAO,IAAIG,QAAQ,EAAE,EAAEI,KAAK,CAAC,CACjDF,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;EAClB;EAEOa,UAAU,CAACN,QAAgB,EAAEO,MAAc;IAChD,OAAO,IAAI,CAACX,IAAI,CACbY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIG,QAAQ,IAAIO,MAAM,EAAE,CAAC,CAC/CL,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;EAClB;;AAnBWC,WAAW;mBAAXA,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXlB,WAAW;SAAXA,WAAW;EAAAmB,OAAA,EAAXnB,WAAW,CAAAoB;AAAA","names":["environment","take","LoteService","constructor","http","baseURL","apiURL","getLotesByEventoId","eventoId","get","pipe","saveLote","lotes","put","deleteLote","loteId","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sourceRoot":"","sources":["C:\\Projetos\\ProEventos-Final\\Front\\ProEventos-App\\src\\app\\services\\lote.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@environments/environment';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { Lote } from '../models/Lote';\r\n\r\n@Injectable()\r\nexport class LoteService {\r\n  baseURL = environment.apiURL + 'api/lotes'\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getLotesByEventoId(eventoId: number): Observable<Lote[]> {\r\n    return this.http.get<Lote[]>(`${this.baseURL}/${eventoId}`).pipe(take(1));\r\n  }\r\n\r\n  public saveLote(eventoId: number, lotes: Lote[]): Observable<Lote[]> {\r\n    return this.http\r\n      .put<Lote[]>(`${this.baseURL}/${eventoId}`, lotes)\r\n      .pipe(take(1));\r\n  }\r\n\r\n  public deleteLote(eventoId: number, loteId: number): Observable<any> {\r\n    return this.http\r\n      .delete(`${this.baseURL}/${eventoId}/${loteId}`)\r\n      .pipe(take(1));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}